import config
from ui.emoji import *


SPOTIFY_MODE = False
SPOTIFY_PREVIEW_DURATION_SEC = 30

# these indicators make the bot continue the process
NEW_COVER_INDICATOR = "–¢—ã –¥–æ–±–∞–≤–∏–ª: "
NEW_COVER_INDICATOR_CHANNEL = 'üé§: '
NEWBIE_INDICATOR = f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –æ—Ü–µ–Ω–∏—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ö!'
RATING_INDICATOR = 'üéß: '
WHO_WANTS_INDICATOR = f'–°–∫–æ–ª—å–∫–æ —Ç—ã –≥–æ—Ç–æ–≤ –ø–æ—Å—Ç–∞–≤–∏—Ç—å?'
FAKE_INDICATOR = 'Fake: '

# admins indicators for inline query
USERS_ACTIONS_COMMAND = 'users'
# admin options
ADD_POINTS = 'addpoints'
ADMIN_OPTIONS = [USERS_ACTIONS_COMMAND]
# cover statuses
WANTING = 'wanting'
COVERING = 'covering'
RATING = 'rating'
FINISHED = 'finished'
WASTED = 'wasted'
FAKE = 'fake'

# main options
if config.ENVIRONMENT == 'development':
    SEC_WANTING = 1000  # 86400 * 3
    SEC_COVERING = SEC_WANTING  # 24 hours
    SEC_RATING = SEC_WANTING  # * 2
    MAX_COVER_PARTICIPANTS = 2
    MIN_COVER_PARTICIPANTS = 2

    MAX_COVERS_AT_ONCE = 20  # 2
    MAX_COVERS_AT_ONCE_PREMIUM = 4  # 4

    MIN_VOTED = 1
    MIN_VOTED_LEVEL = 1
    MIN_DURATION = 30
    MAX_DURATION = 70
elif config.ENVIRONMENT == 'production':
    SEC_WANTING = 86400*2
    SEC_COVERING = 86400  # 24 hours
    SEC_RATING = 86400  # * 2
    MAX_COVER_PARTICIPANTS = 2
    MIN_COVER_PARTICIPANTS = 2

    MAX_COVERS_AT_ONCE = 1  # 2
    MAX_COVERS_AT_ONCE_PREMIUM = 4  # 4

    MIN_VOTED = 5
    MIN_VOTED_LEVEL = 15
    MIN_DURATION = 30
    MAX_DURATION = 70

POINTS = [0 for _ in range(MAX_COVER_PARTICIPANTS)]
POINTS[0] = 2  # for a winner
MIN_POINTS = 50

DEFAULT_FAKE_POINTS = 1000
GIVE_POINTS = [1, 2, 5, 10, 25]

COST_PREMIUM = 25
COST_ADD_COVER = 20

EXP_NEWBIE = 100
EXP_CP = EXP_NEWBIE
EXP_COVER = 0
EXP_VOICE = 0
EXP_VOTE = 0

SPLITTER = ' ‚Äî '
PARAMETER_SPLITTER = ': '

TOP = 10

NEWBIE = '–Ω–æ–≤–∏—á–∫–∏'
BOTTOM = '–Ω—É–±—ã'
LOW = '–Ω–∏–∑–∫–∏–π'
MIDDLE = '—Å—Ä–µ–¥–Ω–∏–π'
HIGH = '–ª—é–±–∏—Ç–µ–ª—å'
PRO = '–ø—Ä–æ—Ñ–∏'
BAD = '–ù–µ –¥–æ—Ç—è–≥–∏–≤–∞–µ—Ç –¥–æ –ª—é–±–∏—Ç–µ–ª—è'

LEVELS = [PRO, HIGH, BAD]

MY_PERCENTAGE = 0.11
WINNER_PERCENTAGE = 1 - MY_PERCENTAGE
LAST_VOICES = 3

STOP_WORDS = ['guitar', 'official', 'mashup', 'band', '–≥—Ä—É–ø–ø–∞', '—Ç–∞–±—ã', 'tutorial', '—Ñ–∏–Ω–≥–µ—Ä—Å—Ç–∞–π–ª', 'fingerstyle',
              'remix', '—Ä–µ–º–∏–∫—Å', '–Ω–∞ –≥–∏—Ç–∞—Ä–µ', '–≥–∏—Ç–∞—Ä–∞']

MUST_WORDS = ['cover', '–∫–∞–≤–µ—Ä']

def geometric_progression(min_value, max_value, count):
    r = (max_value / min_value) ** (1 / (count - 1))
    result = [round(min_value * r ** i) for i in range(count)]
    for i in range(count - 1, 0, -1):
        if result[i] % 10 != 0:
            diff = 10 - (result[i] % 10)
            result[i] += diff
            result[i - 1] = round(result[i] / r)
    if result[0] % 10 != 0:
        result[0] = 10 * (result[0] // 10 + 1)
    return result


def get_level_upgrade_scheme(min_value, max_value):
    result = geometric_progression(max_value, 14, min_value)
    return result


LVL_UPGRADE_SCHEME = geometric_progression(5000, 100000, 7)
EXPERIENCE = geometric_progression(100, 2000, MAX_COVER_PARTICIPANTS if MAX_COVER_PARTICIPANTS > 1 else 2)
EXPERIENCE.reverse()

STANDART_ARTISTS_RU = [
    "–ï–≥–æ—Ä –ö—Ä–∏–¥",
    "–ë–∞—Å—Ç–∞",
    "–¢–∏–º–∞—Ç–∏",
    "–ú–æ—Ç",
    "–ù—é—à–∞",
    "–ê–ª–µ–∫—Å–µ–π –í–æ—Ä–æ–±—å–µ–≤",
    "–°–µ—Ä–≥–µ–π –õ–∞–∑–∞—Ä–µ–≤",
    "–ó–µ–º—Ñ–∏—Ä–∞",
    "–ê–ª–ª–∞ –ü—É–≥–∞—á–µ–≤–∞",
    "–î–∏–º–∞ –ë–∏–ª–∞–Ω",
    "–ú–∞–∫—Å –ë–∞—Ä—Å–∫–∏—Ö",
    "–ü–æ–ª–∏–Ω–∞ –ì–∞–≥–∞—Ä–∏–Ω–∞",
    "–°–ª–∞–≤–∞ –ö–ü–°–°",
    "–°–µ—Ä–≥–µ–π –®–Ω—É—Ä–æ–≤",
    "–ê–ª–µ–∫—Å–µ–π –ß—É–º–∞–∫–æ–≤",
    "–ê—Ä—Ç—É—Ä –ü–∏—Ä–æ–∂–∫–æ–≤",
    "–ò–≤–∞–Ω –î–æ—Ä–Ω",
    "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥"
]

STANDARD_ARTISTS_UA = [
    "–û–∫–µ–∞–Ω –ï–ª—å–∑–∏",
    "–°–∫—Ä—è–±—ñ–Ω",
    "–°–µ—Ä–≥—ñ–π –ë–∞–±–∫—ñ–Ω",
    "–í—Ä–µ–º—è –∏ –°—Ç–µ–∫–ª–æ",
    "–ú–æ–Ω–∞—Ç–∏–∫",
    "–û–ª—å–≥–∞ –ü–æ–ª—è–∫–æ–≤–∞",
    "–î—Ä—É–≥–∞ –†—ñ–∫–∞",
    "–¢—ñ–Ω–∞ –ö–∞—Ä–æ–ª—å",
    "–î–∂–∞–º–∞–ª–∞",
    "–ù–∞—Ç–∞–ª–∫–∞ –ö–∞—Ä–ø–∞",
    "–¢–∞—Ä—Ç–∞–∫",
    "–ü–æ—Ç–∞–ø —ñ –ù–∞—Å—Ç—è",
    "–ú–∞—Ä—ñ—è –Ø—Ä–µ–º—á—É–∫",
    "–í–í",
    "–ù–µ–ê–Ω–≥–µ–ª–∏",
    "–ë—É–º–±–æ–∫—Å",
    "–¢—ñ–∫",
    "–Ü—Ä–∏–Ω–∞ –ë—ñ–ª–∏–∫",
    "–•—Ä–∏—Å—Ç–∏–Ω–∞ –°–æ–ª–æ–≤—ñ–π"
]

STANDARD_ARTISTS = STANDART_ARTISTS_RU + STANDARD_ARTISTS_UA

if __name__ == '__main__':
    print(LVL_UPGRADE_SCHEME)
    print(EXPERIENCE)


